{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evyat\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\financy-assignment\\\\src\\\\components\\\\Inputs\\\\MonthYearPicker.tsx\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MonthYearPicker = _ref => {\n  let {\n    date,\n    setDate,\n    months,\n    setMonths\n  } = _ref;\n\n  const handleChangeMonth = date => {\n    setDate(date);\n    let selected_month_To_ms = date.getTime();\n    let now_to_ms = new Date().getTime();\n    let days_to_goal = (selected_month_To_ms - now_to_ms) / 86400000; // 86400000 ms represents one day\n\n    let months_to_goal = Math.round(days_to_goal / 30);\n    setMonths(months_to_goal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    dateFormat: \"MMMM yyyy\",\n    minDate: date,\n    showMonthYearPicker: true,\n    selected: date,\n    onChange: date => handleChangeMonth(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MonthYearPicker;\nexport default MonthYearPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthYearPicker\");","map":{"version":3,"sources":["C:/Users/Evyat/OneDrive/שולחן העבודה/financy-assignment/src/components/Inputs/MonthYearPicker.tsx"],"names":["React","DatePicker","MonthYearPicker","date","setDate","months","setMonths","handleChangeMonth","selected_month_To_ms","getTime","now_to_ms","Date","days_to_goal","months_to_goal","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAO,4CAAP;;;AASA,MAAMC,eAAgC,GAAG,QAKnC;AAAA,MALoC;AACxCC,IAAAA,IADwC;AAExCC,IAAAA,OAFwC;AAGxCC,IAAAA,MAHwC;AAIxCC,IAAAA;AAJwC,GAKpC;;AACJ,QAAMC,iBAAiB,GAAIJ,IAAD,IAAgB;AACxCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA,QAAIK,oBAAoB,GAAGL,IAAI,CAACM,OAAL,EAA3B;AACA,QAAIC,SAAS,GAAG,IAAIC,IAAJ,GAAWF,OAAX,EAAhB;AACA,QAAIG,YAAY,GAAG,CAACJ,oBAAoB,GAAGE,SAAxB,IAAqC,QAAxD,CAJwC,CAI0B;;AAClE,QAAIG,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,GAAG,EAA1B,CAArB;AACAN,IAAAA,SAAS,CAACO,cAAD,CAAT;AACD,GAPD;;AAQA,sBACE,QAAC,UAAD;AACE,IAAA,UAAU,EAAC,WADb;AAEE,IAAA,OAAO,EAAEV,IAFX;AAGE,IAAA,mBAAmB,MAHrB;AAIE,IAAA,QAAQ,EAAEA,IAJZ;AAKE,IAAA,QAAQ,EAAGA,IAAD,IAAUI,iBAAiB,CAACJ,IAAD;AALvC;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvBD;;KAAMD,e;AAyBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\ninterface Props {\r\n  date: Date;\r\n  setDate: (date: Date) => void;\r\n  months: number;\r\n  setMonths(months: number): void;\r\n}\r\n\r\nconst MonthYearPicker: React.FC<Props> = ({\r\n  date,\r\n  setDate,\r\n  months,\r\n  setMonths,\r\n}) => {\r\n  const handleChangeMonth = (date: Date) => {\r\n    setDate(date!);\r\n    let selected_month_To_ms = date.getTime();\r\n    let now_to_ms = new Date().getTime();\r\n    let days_to_goal = (selected_month_To_ms - now_to_ms) / 86400000; // 86400000 ms represents one day\r\n    let months_to_goal = Math.round(days_to_goal / 30);\r\n    setMonths(months_to_goal);\r\n  };\r\n  return (\r\n    <DatePicker\r\n      dateFormat=\"MMMM yyyy\"\r\n      minDate={date}\r\n      showMonthYearPicker\r\n      selected={date}\r\n      onChange={(date) => handleChangeMonth(date!)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MonthYearPicker;\r\n"]},"metadata":{},"sourceType":"module"}